{"version":3,"sources":["blocks/header/__logo/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","cardImg","cardAlt","cardCaption","cardLikesCounter","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","onClick","type","Main","props","onEditAvatar","style","backgroundImage","avatar","name","aria-label","onEditProfile","about","onAddPlace","cards","map","link","length","Footer","ImagePopup","isOpen","id","onClose","linkCard","nameCard","api","url","token","this","_url","_token","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","_getResponseData","data","body","JSON","stringify","PopupWithForm","onSubmit","title","children","EditProfilePopup","useState","setName","description","setDiscription","useEffect","e","preventDefault","onUpdateUser","placeholder","required","minLength","maxLength","noValidate","autoComplete","value","onChange","target","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","cardName","setCardName","cardLink","setCardLink","App","setCurrentUser","cardsContext","setCards","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","getInfoProfile","dataUser","catch","err","console","log","getAllInitialCards","dataCards","Provider","i","deleteLike","newCard","state","c","putLike","deleteCard","filter","addInfoProfile","addCard","addInfoProfileAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.824a1ea1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import logo from '../../src/blocks/header/__logo/logo.svg'\r\nfunction Header() {\r\n    return(\r\n      <header className=\"header\">\r\n          <img className=\"header__logo\" src={logo} alt=\"Логотип Mesto\"/>\r\n      </header>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\nexport const CurrentUserContext =React.createContext({});\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card({\r\n  card,\r\n  cardImg,\r\n  cardAlt,\r\n  cardCaption,\r\n  cardLikesCounter,\r\n  onCardClick,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  const currentUser = React.useContext(CurrentUserContext); // объявили использование контекста\r\n\r\n  const isOwn = card.owner._id === currentUser._id; //? Определяем, являемся ли мы владельцем текущей карточки\r\n  const cardDeleteButtonClassName = `button ${\r\n    isOwn\r\n      ? \"element__delete element__delete_visible\" //если являемся, то добавлаяем класс visible\r\n      : \"element__delete\"\r\n  }`;\r\n  const isLiked = card.likes.some((like) => like._id === currentUser._id); // определяем, есть ли у кликнутой карточки лайк\r\n  const cardLikeButtonClassName = `element__like button ${\r\n    isLiked ? \"element__like_active\" : \"\"\r\n  }`; \r\n\r\n  function handleClick() {\r\n    onCardClick(cardImg, cardCaption);\r\n  }\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n    \r\n  }\r\n  return (\r\n    <div className=\"element\">\r\n      <img\r\n        className=\"element__img\"\r\n        src={cardImg}\r\n        alt={cardAlt}\r\n        onClick={handleClick}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleDeleteClick}\r\n        className={cardDeleteButtonClassName}\r\n      ></button>\r\n      <div className=\"element__name\">\r\n        <h2 className=\"element__caption\">{cardCaption}</h2>\r\n        <div className=\" element__like-counter\">\r\n          <button\r\n            onClick={handleLikeClick}\r\n            className={cardLikeButtonClassName}\r\n          ></button>\r\n          <div className=\"element__counter\">{cardLikesCounter}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Card;\r\n","import Card from \"../components/Card\";\r\nimport React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext); //подписали на контекст\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"profile__avatar-img button\"\r\n          onClick={props.onEditAvatar}\r\n          style={{ backgroundImage: `url(${currentUser.avatar})` }}\r\n        ></button>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__info-name-eddit\">\r\n            <h1 className=\"profile__info-name\">{currentUser.name}</h1>\r\n            <button\r\n              type=\"button\"\r\n              className=\"profile__button-info-eddit button\"\r\n              aria-label=\"Редктировать профиль\"\r\n              onClick={props.onEditProfile}\r\n            ></button>\r\n          </div>\r\n          <p className=\"profile__info-job\">{currentUser.about}</p>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"profile__button-add button\"\r\n          aria-label=\"Добавить карточку\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        {props.cards.map((card) => {\r\n          return (\r\n            <Card\r\n              key={card._id}\r\n              card={card}\r\n              cardImg={card.link}\r\n              cardAlt={card.name}\r\n              cardCaption={card.name}\r\n              cardLikesCounter={card.likes.length}\r\n              onCardClick={props.onCardClick}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\nexport default Main;\r\n","function Footer(){\r\n  return(\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  )\r\n}\r\nexport default Footer","function ImagePopup(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup_type_img ${\r\n        props.card.isOpen ? \"popup_visible\" : \" \"\r\n      } `}\r\n    >\r\n      <div\r\n        className=\"popup__container popup__container-img\"\r\n        name=\"popup-picture\"\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__button-close popup__button-close_type_img button\"\r\n          aria-label=\"Закрыть\"\r\n          id=\"popup__button-close_img\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <img\r\n          className=\"popup__picture\"\r\n          src={`${props.card.linkCard.linkCard}`}\r\n          alt={`${props.card.nameCard.nameCard}`}\r\n        />\r\n        <p className=\"popup__picture-caption\">{`${props.card.nameCard.nameCard}`}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","export class Api {\r\n  constructor(url, token) {\r\n    this._url = url;\r\n    this._token = token;\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json()\r\n  }\r\n\r\n  getAllInitialCards() {\r\n\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return this._getResponseData(res);\r\n      })\r\n\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._url}cards/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        return this._getResponseData(res);\r\n      })\r\n\r\n  }\r\n\r\n  getInfoProfile() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return this._getResponseData(res);\r\n      })\r\n\r\n  }\r\n\r\n  addInfoProfile(data) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return this._getResponseData(res);\r\n      })\r\n\r\n  }\r\n\r\n  addInfoProfileAvatar(data) {\r\n    return fetch(`${this._url}users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return this._getResponseData(res);\r\n      })\r\n\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return this._getResponseData(res);\r\n      })\r\n\r\n  }\r\n\r\n  putLike(id) {\r\n    return fetch(`${this._url}cards/likes/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      return this._getResponseData(res);;\r\n    })\r\n\r\n  }\r\n\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this._url}cards/likes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      return this._getResponseData(res);\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nconst api = new Api (\r\n  \"https://mesto.nomoreparties.co/v1/cohort-20/\",\r\n  \"4056c30d-f7e0-4f36-a996-b3ca58e8ceb0\"\r\n);\r\n\r\nexport default api","function PopupWithForm(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup_type_${props.name} ${\r\n        props.isOpen ? \"popup_visible\" : \" \"\r\n      }`}\r\n    >\r\n      <form\r\n        onSubmit={props.onSubmit}\r\n        className={`popup__container popup__container_type_form popup__container_type_${props.name}`}\r\n        name={`${props.name}`}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className={`popup__button-close popup__button-close_type_${props.name} button`}\r\n          aria-label=\"Закрыть\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <h2 className=\"popup__caption popup__caption_type_card \">{`${props.title}`}</h2>\r\n        <fieldset className=\"popup__form\">{props.children}</fieldset>\r\n        <button type=\"submit\" className=\"popup__button-submit button\">\r\n          Сохранить\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default PopupWithForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport PopupWithForm from \"../components/PopupWithForm\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDiscription] = React.useState(\"\"); // задаем начальное знчение пустую строку, т.к. при первом монитрование записывается undefined\r\n  const currentUser = React.useContext(CurrentUserContext); //подписка на контекст\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDiscription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleChangeDescription(e) {\r\n    setDiscription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit-form\"\r\n      title=\"Редактировать профиль\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__field popup__field_type_name \"\r\n        id=\"popup__field-eddit-name\"\r\n        type=\"text\"\r\n        placeholder=\"Имя\"\r\n        aria-label=\"Имя\"\r\n        name=\"name\"\r\n        required\r\n        minLength=\"3\"\r\n        maxLength=\"40\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChangeName}\r\n      />\r\n      <span\r\n        className=\"popup__field-error\"\r\n        id=\"popup__field-eddit-name-error\"\r\n      ></span>\r\n      <input\r\n        className=\"popup__field popup__field_type_job\"\r\n        id=\"popup__field-eddit-job\"\r\n        type=\"text\"\r\n        placeholder=\"Профессия\"\r\n        aria-label=\"О себе\"\r\n        name=\"about\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        value={description}\r\n        onChange={handleChangeDescription}\r\n      />\r\n      <span\r\n        className=\"popup__field-error\"\r\n        id=\"popup__field-eddit-job-error\"\r\n      ></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default EditProfilePopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarRef = React.useRef(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value,\r\n    });\r\n    avatarRef.current.value = \"\"; //для сброса input после отправки данных аватара на сервер\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      name=\"avatar\"\r\n      title=\"Обновить Аватар\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__field popup__field_type_avatar-link\"\r\n        id=\"popup__field-avatar-link\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        aria-label=\"Ссылка на картинку\"\r\n        name=\"avatar\"\r\n        required\r\n        noValidate\r\n        autoComplete=\"on\"\r\n        ref={avatarRef}\r\n      />\r\n      <span\r\n        className=\"popup__field-error\"\r\n        id=\"popup__field-avatar-link-error\"\r\n      ></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default EditAvatarPopup;\r\n","import React from \"react\";\r\n\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [cardName, setCardName] = React.useState('');\r\n  const [cardLink, setCardLink] = React.useState('');\r\n;\r\n\r\n  function handleChangeName(e) {\r\n    setCardName(e.target.value);\r\n  }\r\n  function handleChangeLink(e) {\r\n    setCardLink(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onAddPlace({\r\n      name: cardName,\r\n      link: cardLink,\r\n    });\r\n     setCardName('');\r\n     setCardLink('');\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"card\"\r\n      title=\"Новое место\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__field popup__field_type_card-name\"\r\n        id=\"popup__field-card-name\"\r\n        type=\"text\"\r\n        placeholder=\"Название\"\r\n        aria-label=\"Название\"\r\n        name=\"name\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n         value={\"\" || cardName}\r\n        onChange={handleChangeName}\r\n      />\r\n      <span\r\n        className=\"popup__field-error\"\r\n        id=\"popup__field-card-name-error\"\r\n      ></span>\r\n      <input\r\n        className=\"popup__field popup__field_type_card-link\"\r\n        id=\"popup__field-card-link\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        aria-label=\"Ссылка на картинку\"\r\n        name=\"link\"\r\n        required\r\n        noValidate\r\n        autoComplete=\"on\"\r\n        value={\"\" || cardLink}\r\n        onChange={handleChangeLink}\r\n      />\r\n      <span\r\n        className=\"popup__field-error\"\r\n        id=\"popup__field-card-link-error\"\r\n      ></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default AddPlacePopup;\r\n","import \"../index.css\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Main from \"../components/Main\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nimport ImagePopup from \"../components/ImagePopup\";\r\nimport api from \"../utils/api\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\"; //импортировали контекст\r\n\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = React.useState({ name: \"\", about: \"\" }); //задали текущее значение состония объекту currentUser т.к. при первом монтирование попадается undefined\r\n  const [cardsContext, setCards] = React.useState([]); //задали текущее значение состония переменной cardsContext\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\r\n    false\r\n  );\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\r\n    false\r\n  );\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({\r\n    isOpen: false,\r\n    linkCard: {},\r\n    nameCard: {},\r\n  });\r\n\r\n  // подняли стейт для того то бы можно было использовать в других компонентх, а не только в main\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  function handleCardClick(linkCard, nameCard) {\r\n    setSelectedCard({\r\n      isOpen: true,\r\n      linkCard: { linkCard },\r\n      nameCard: { nameCard },\r\n    });\r\n  }\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard({ isOpen: false, linkCard: {}, nameCard: {} });\r\n  }\r\n  useEffect(() => { //получение данных пользователя\r\n   \r\n    api\r\n      .getInfoProfile()\r\n      .then((dataUser) => {\r\n        setCurrentUser(dataUser); // записали в стейт currentUser принятое значение от сервера\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, \"Ошибка при загрузке информации о профиле\");\r\n      });\r\n  }, []);\r\n\r\n  function handleUpdateUser({ name, about }) {\r\n    api\r\n      .addInfoProfile({ name, about })\r\n      .then((dataUser) => {\r\n        setCurrentUser(dataUser);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, \"Ошибка при отправке данных пользователя\");\r\n      });\r\n  }\r\n  function handleUpdateAvatar(data) {\r\n    api\r\n      .addInfoProfileAvatar(data)\r\n      .then((dataUser) => {\r\n        setCurrentUser(dataUser);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, \"Ошибка при отправке аватара\");\r\n      });\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\r\n\r\n    if (isLiked) {\r\n      api\r\n        .deleteLike(card._id) // Отправляем запрос в API и получаем обновлённые данные карточки\r\n        .then((newCard) => {\r\n          setCards((state) => {\r\n            return state.map((c) => (c._id === card._id ? newCard : c));\r\n          });\r\n        \r\n        })\r\n        .catch((err) => {\r\n          console.log(err, \"ошибка из api.deleteLike\");\r\n        });\r\n    } else {\r\n      api\r\n        .putLike(card._id)\r\n        .then((newCard) => {\r\n          setCards((state) => {\r\n            return state.map((c) => (c._id === card._id ? newCard : c));\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err, \"ошибка из api.putLike\");\r\n        });\r\n    }\r\n  }\r\n  function handleCardDelete(card) {\r\n    api.deleteCard(card._id)\r\n    .then(() => {\r\n      setCards(cardsContext.filter(c=>c._id !== card._id))})\r\n    .catch((err) => {\r\n      console.log(err, \"Ошибка при удалении карточки\");\r\n    });\r\n  }\r\n\r\n  useEffect(() => {// получение карточек\r\n    \r\n    api\r\n      .getAllInitialCards()\r\n      .then((dataCards) => {\r\n        setCards(dataCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, \"Ошибка при загрузке карточек\");\r\n      });\r\n  }, []);\r\n\r\n  function handleAddPlaceSubmit(data) {\r\n    api\r\n      .addCard(data)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cardsContext]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, \"Ошибка при отправке новой карточки\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n          <div className=\"root\">\r\n            <div className=\"container\">\r\n              <Header />\r\n              <Main\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardClick={handleCardClick}\r\n                cards={cardsContext}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete}\r\n              />\r\n              <Footer />\r\n            </div>\r\n\r\n            <EditProfilePopup\r\n              isOpen={isEditProfilePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateUser={handleUpdateUser}\r\n            />\r\n\r\n            <AddPlacePopup\r\n              isOpen={isAddPlacePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onAddPlace={handleAddPlaceSubmit}\r\n            />\r\n\r\n            <EditAvatarPopup\r\n              isOpen={isEditAvatarPopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateAvatar={handleUpdateAvatar}\r\n            />\r\n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n          </div>\r\n      </CurrentUserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from '../src/components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport  {BrowserRouter} from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}